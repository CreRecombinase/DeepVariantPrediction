rule write_rmd:
    input:
        i=lambda wildcards: 'score/{name}/{group}/{data}_result.feather'.format(name=config['model']['name'], data=wildcards.data, group=wildcards.group)
    output:
        o=temp('performance/{name}/{group}/histogram/{data}_report.Rmd')
    params:
        model=config['model']['name'],
	envir='../../../../'
    run:
        rmd = '''---
title: "Histogram of delta value between allele1 and allele2"
output:
    html_document
date: "`r format(Sys.time(), '%B %d, %Y')`"
---

Here we use two definitions of delta value:

* Log Odds: $\log\\frac{{p_0}}{{1 - p_0}} - \log\\frac{{p_1}}{{1 - p_1}}$
* Distance: $p_0 - p_1$

**Attention**: the pipeline assume that allele1 is reference allele and allele2 is alternative allele.
You can check if this is ensured by making use of `data/[data].report.html`. If it is not ensured, the
plot is not interpretable

## Log Odds

```{{r}}
library(feather)
library(ggplot2)
df <- read_feather('{envir}{input}')
df$log_odds <- log(df$Allele1 / (1 - df$Allele1)) - log(df$Allele2 / (1 - df$Allele2))
for(i in unique(df$Annotation)){{
    ggplot(df[df$Annotation == i,]) + geom_histogram(aes(x = log_odds)) + ggtitle(paste('Histogram of', i))
}}
```

## Distance

```{{r}}
df$distance <- df$Allele1 - df$Allele2
for(i in unique(df$Annotation)){{
    ggplot(df[df$Annotation == i,]) + geom_histogram(aes(x = distance)) + ggtitle(paste('Histogram of', i))
}}
```
'''.format(input=input.i, envir=params.envir)
        o = open(output.o, 'w')
        o.write(rmd)
        o.close()

rule compile_rmd:
    input:
        'performance/{name}/{group}/histogram/{data}_report.Rmd'
    output:
        'performance/{name}/{group}/histogram/{data}_report.html'
    shell:
        '''Rscript -e "rmarkdown::render('./{input}')"'''
