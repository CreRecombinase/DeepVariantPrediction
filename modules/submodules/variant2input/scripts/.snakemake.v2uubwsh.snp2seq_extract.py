
######## Snakemake header ########
import sys; sys.path.insert(0, "/project2/xinhe/yanyul/softwares/Anaconda2/envs/deepvarpred/lib/python3.5/site-packages"); import pickle; snakemake = pickle.loads(b'\x80\x03csnakemake.script\nSnakemake\nq\x00)\x81q\x01}q\x02(X\x03\x00\x00\x00logq\x03csnakemake.io\nLog\nq\x04)\x81q\x05}q\x06X\x06\x00\x00\x00_namesq\x07}q\x08sbX\x06\x00\x00\x00configq\t}q\n(X\x05\x00\x00\x00labelq\x0b}q\x0c(X\x06\x00\x00\x00group2q\r}q\x0e(X\x06\x00\x00\x00Noonanq\x0fK\xc3X\x04\x00\x00\x00E129q\x10K\xc2uX\x06\x00\x00\x00group1q\x11}q\x12(X\x04\x00\x00\x00E082q\x13K\xc1X\x04\x00\x00\x00E081q\x14K\xc0uuX\x04\x00\x00\x00dataq\x15}q\x16(X\x0c\x00\x00\x00pranav_test1q\x17}q\x18(X\x06\x00\x00\x00methodq\x19X\x1c\x00\x00\x00_formatting_pranav.snakemakeq\x1aX\x04\x00\x00\x00nameq\x1bX\x15\x00\x00\x00test/pranav_test1.txtq\x1cuX\x0c\x00\x00\x00pranav_test2q\x1d}q\x1e(X\x06\x00\x00\x00methodq\x1fX\x1c\x00\x00\x00_formatting_pranav.snakemakeq X\x04\x00\x00\x00nameq!X\x15\x00\x00\x00test/pranav_test2.txtq"uuX\x05\x00\x00\x00modelq#}q$(X\x07\x00\x00\x00workdirq%X\x10\x00\x00\x00path_to/work_dirq&X\x04\x00\x00\x00nameq\'X\x1d\x00\x00\x00path_to_model/model_name.hdf5q(X\t\x00\x00\x00snakemakeq)X\x11\x00\x00\x00path_to/snakemakeq*uX\x0b\x00\x00\x00window_sizeq+M\xe8\x03X\x0f\x00\x00\x00genome_assemblyq,X-\x00\x00\x00/project2/xinhe/yanyul/databases/hg19/hg19.faq-X\x0b\x00\x00\x00performanceq.}q/(X\x05\x00\x00\x00mode1q0}q1(X\x06\x00\x00\x00paramsq2X\x15\x00\x00\x00some other input hereq3X\x06\x00\x00\x00scriptq4X\x1e\x00\x00\x00path_to/performance_script1.pyq5uX\x05\x00\x00\x00mode2q6}q7(X\x06\x00\x00\x00paramsq8}q9(X\x08\x00\x00\x00thresoldq:X\x04\x00\x00\x001e-5q;X\n\x00\x00\x00annotationq<X\x16\x00\x00\x00path_to/annotation.bedq=uX\x06\x00\x00\x00scriptq>X\x1e\x00\x00\x00path_to/performance_script1.pyq?uuuX\x05\x00\x00\x00inputq@csnakemake.io\nInputFiles\nqA)\x81qBX$\x00\x00\x00data/pranav_test1.formatted.expendedqCa}qDh\x07}qEsbX\x06\x00\x00\x00paramsqFcsnakemake.io\nParams\nqG)\x81qHh-a}qI(h\x07}qJX\x08\x00\x00\x00assemblyqKK\x00N\x86qLshKh-ubX\x04\x00\x00\x00ruleqMX\r\x00\x00\x00extract_fastaqNX\t\x00\x00\x00resourcesqOcsnakemake.io\nResources\nqP)\x81qQ(K\x01K\x01e}qR(h\x07}qS(X\x06\x00\x00\x00_coresqTK\x00N\x86qUX\x06\x00\x00\x00_nodesqVK\x01N\x86qWuhTK\x01hVK\x01ubX\x07\x00\x00\x00threadsqXK\x01X\t\x00\x00\x00wildcardsqYcsnakemake.io\nWildcards\nqZ)\x81q[X\x0c\x00\x00\x00pranav_test1q\\a}q](h\x07}q^X\x04\x00\x00\x00dataq_K\x00N\x86q`sX\x04\x00\x00\x00dataqah\\ubX\x06\x00\x00\x00outputqbcsnakemake.io\nOutputFiles\nqc)\x81qdX\'\x00\x00\x00data/pranav_test1.formatted.expended.faqea}qfh\x07}qgsbub.')
######## Original script #########
import my_python
# extract sequence from genome
cmd = '''bedtools getfasta -fi {genome} -bed {input} -fo {out} \
-name -tab'''.format(genome=params.assembly, input=snakemake.input, out=snakemake.output)
my_python.myOsSystem(cmd, False)
