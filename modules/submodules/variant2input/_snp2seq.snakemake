rule expand_bed:
    input:
        a1='data/{data}.formatted'
    output:
        out=temp('data/{data}.formatted.expended')
    params:
        window=config['window_size']
    script:
        'scripts/snp2seq_expand.py'

rule report_bed_pre1:
    input:
        a='data/{data}.formatted'
    output:
        o=temp('data/{data}.checker.bed.temp')
    params:
        assembly=config['genome_assembly']
    shell:
        '''bedtools getfasta -fi {params.assembly} -bed {input.a} -fo {output.o} \
        -name -tab'''
rule report_bed2_pre2:
    input:
        a='data/{data}.checker.bed.temp'
    output:
        o=temp('data/{data}.checker.bed'),
        o2=temp('data/{data}.checker.bed.wrong.txt')
    script:
        'scripts/snp2seq_report_pre2.py'
rule report_bed:
    input:
        a='data/{data}.checker.bed',
        a2='data/{data}.checker.bed.wrong.txt'
    output:
        o='data/{data}.report.html',
    params:
        formatting=lambda wildcards: config['data'][wildcards.data]['method']
    script:
        'scripts/snp2seq_report.py'

rule extract_fasta:
    input:
        a1='data/{data}.formatted.expended'
    output:
        out=temp('data/{data}.formatted.expended.fa')
    params:
        assembly=config['genome_assembly']
    log:
        'logs/{data}_extract_fasta.log'
    script:
      '''bedtools getfasta -fi {params.assembly} -bed {input.a1} -fo {output.out} \
    -name -tab 2> {log}'''

rule generate_allele1_allele2:
    input:
        a1='data/{data}.formatted.expended.fa'
    output:
        a1=temp('data/{data}_allele1.fa'),
        a2=temp('data/{data}_allele2.fa')
    params:
        window=config['window_size']
    script:
        'scripts/snp2seq_generate.py'
